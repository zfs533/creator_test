{"version":3,"sources":["assets/scene/turnbase/turnmanager.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,mCAAsC;AAEhC,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAE5C,IAAY,UAGX;AAHD,WAAY,UAAU;IAClB,2CAAQ,CAAA;IACR,6CAAS,CAAA;AACb,CAAC,EAHW,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAGrB;AAQD;IAAA;IAmCA,CAAC;oBAnCoB,WAAW;IAG5B,sBAAkB,mBAAI;aAAtB;YACI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;gBACb,IAAI,CAAC,KAAK,GAAG,IAAI,aAAW,EAAE,CAAC;aAClC;YACD,OAAO,IAAI,CAAC,KAAK,CAAC;QACtB,CAAC;;;OAAA;IAGD,0BAAI,GAAJ,UAAK,EAAY;QACb,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IACpB,CAAC;IAED;;;;OAIG;IACH,kCAAY,GAAZ,UAAa,IAAY,EAAE,KAAa;QACpC,IAAI,CAAC,GAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;QAC5B,IAAI,IAAI,GAAG,gBAAc,CAAC,KAAK,CAAC;QAChC,IAAI,IAAI,IAAI,UAAU,CAAC,IAAI,EAAE;YACzB,IAAI,GAAG,gBAAc,CAAC,MAAM,CAAC;SAChC;QACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAClC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,KAAK,EAAE;gBACxB,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,gBAAc,CAAC,GAAG,CAAC;gBACzC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,gBAAc,CAAC,GAAG,CAAC;gBACzC,OAAO,CAAC,CAAC;aACZ;SACJ;QACD,OAAO,CAAC,CAAC;IACb,CAAC;;IAlCgB,WAAW;QAD/B,OAAO;OACa,WAAW,CAmC/B;IAAD,kBAAC;CAnCD,AAmCC,IAAA;kBAnCoB,WAAW","file":"","sourceRoot":"/","sourcesContent":["import turnbaseconfig from \"./config\";\nimport turnmain from \"./turnmain\";\nconst { ccclass, property } = cc._decorator;\n\nexport enum PlayerType {\n    hero = 0,\n    enemy = 1,\n}\n\nexport interface POS {\n    x: number;\n    y: number;\n}\n\n@ccclass\nexport default class turnmanager {\n\n    private static _inst: turnmanager;\n    public static get Inst(): turnmanager {\n        if (!this._inst) {\n            this._inst = new turnmanager();\n        }\n        return this._inst;\n    }\n    private tMain: turnmain;\n\n    init(tM: turnmain) {\n        this.tMain = tM;\n    }\n\n    /**\n     * 获取角色所在坐标\n     * @param type 敌人，玩家\n     * @param index 角色编号\n     */\n    getplayerPos(type: number, index: number): POS {\n        let p: POS = { x: 0, y: 0 };\n        let list = turnbaseconfig.enemy;\n        if (type == PlayerType.hero) {\n            list = turnbaseconfig.family;\n        }\n        for (let i = 0; i < list.length; i++) {\n            if (list[i].index == index) {\n                p.x = list[i].gridX * turnbaseconfig.wid;\n                p.y = list[i].gridY * turnbaseconfig.wid;\n                return p;\n            }\n        }\n        return p;\n    }\n}\n"]}