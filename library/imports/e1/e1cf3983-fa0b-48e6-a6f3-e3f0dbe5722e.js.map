{"version":3,"sources":["assets/scene/turnbase/turnmain.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import turnbaseconfig, { user } from \"./config\";\nimport Enemy from \"./enemy\";\nimport Hero from \"./hero\";\nimport playerbase from \"./playerbase\";\nimport turnmanager, { PlayerType } from \"./turnmanager\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class turnmain extends cc.Component {\n    @property(cc.Prefab)\n    heroPre: cc.Prefab = null;\n\n    @property(cc.Prefab)\n    enemyPre: cc.Prefab = null;\n\n    private familyList: cc.Node[] = [];\n    private enemyList: cc.Node[] = [];\n\n    onLoad() {\n        turnbaseconfig.init();\n        turnmanager.Inst.init(this);\n    }\n\n    async start() {\n        await this.layoutHero(turnbaseconfig.family);\n        await this.layoutHero(turnbaseconfig.enemy);\n        this.startPlay(this.familyList[0], PlayerType.hero);\n    }\n\n    async layoutHero(list: user[]) {\n        return new Promise(resolve => {\n            for (let i = 0; i < list.length; i++) {\n                let hero: cc.Node = null;\n                if (list[i].type == 0) {\n                    hero = cc.instantiate(this.heroPre);\n                    this.familyList.push(hero);\n                }\n                else {\n                    hero = cc.instantiate(this.enemyPre);\n                    this.enemyList.push(hero);\n                }\n                hero.getComponent(playerbase).setBaseInfo(list[i]);\n                hero.setPosition(list[i].gridX * turnbaseconfig.wid, list[i].gridY * turnbaseconfig.wid);\n                this.node.addChild(hero);\n            }\n            resolve();\n        });\n    }\n\n    /**\n     * 开始战斗\n     * @param player \n     * @param type \n     */\n    startPlay(player: cc.Node, type: number) {\n        if (type == PlayerType.hero) {\n            player.getComponent(Hero).play((data: user) => {\n                this.startPlay(this.enemyList[data.index], PlayerType.enemy);\n            });\n        }\n        else {\n            player.getComponent(Enemy).play((data: user) => {\n                let idx = data.index + 1 <= 4 ? data.index + 1 : 0;\n                this.startPlay(this.familyList[idx], PlayerType.hero);\n            });\n        }\n    }\n}\n"]}