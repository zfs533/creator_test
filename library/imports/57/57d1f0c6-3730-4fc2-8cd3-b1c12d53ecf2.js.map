{"version":3,"sources":["assets/scene/apath/ppath.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import pitem from \"./pitem\";\n\nconst { ccclass, property } = cc._decorator;\n/**\n * 寻路组件\n */\n@ccclass\nexport default class ppath extends cc.Component {\n\n    /* 起点 */\n    @property(cc.Node)\n    role: cc.Node = null;\n\n    /* 终点 */\n    @property(cc.Node)\n    distination: cc.Node = null;\n\n    @property(cc.Node)\n    obstacle: cc.Node = null;\n\n    private startPos: cc.Vec2;\n    private endPos: cc.Vec2;\n    private openlist: pitem[] = [];\n    private closelist: pitem[] = [];\n\n    private tempList: cc.Node[] = [];\n\n    onLoad() {\n        this.startPos = this.role.getPosition();\n        this.endPos = this.distination.getPosition();\n    }\n\n    start() {\n        this.begin();\n    }\n    begin() {\n        let origin: pitem = this.getPitem();\n        origin.F = 0;\n        origin.G = 0;\n        origin.H = 0;\n        origin.x = this.startPos.x;\n        origin.y = this.startPos.y;\n        let isFined: boolean = false;\n        let center: pitem = origin;\n        this.openlist.push(center);\n        while (!isFined) {\n            /* 找最小F值作为新center */\n            this.openlist.sort((a, b) => { return a.F - b.F });\n            center = this.openlist[0];\n            /* 将center从openlist中移除 */\n            this.removeCenter(center);\n            this.closelist.push(center);\n            for (let i = 0; i < 8; i++) {\n                let item: pitem = this.getPitem();\n                switch (i) {\n                    case 0:/* 上 */\n                        item.x = center.x;\n                        item.y = center.y + center.height;\n                        break;\n                    case 1:/* 右上 */\n                        item.x = center.x + center.width;\n                        item.y = center.y + center.height;\n                        break;\n                    case 2:/* 右 */\n                        item.x = center.x + center.width;\n                        item.y = center.y;\n                        break;\n                    case 3:/* 右下 */\n                        item.x = center.x + center.width;\n                        item.y = center.y - center.height;\n                        break;\n                    case 4:/* 下 */\n                        item.x = center.x;\n                        item.y = center.y - center.height;\n                        break;\n                    case 5:/* 左下 */\n                        item.x = center.x - center.width;\n                        item.y = center.y - center.height;\n                        break;\n                    case 6:/* 左 */\n                        item.x = center.x - center.width;\n                        item.y = center.y;\n                        break;\n                    case 7:/* 左上 */\n                        item.x = center.x - center.width;\n                        item.y = center.y + center.height;\n                        break;\n                }\n                /* 是否在障碍物上 */\n                if (this.isObstacle(item)) {\n                    continue;\n                }\n                /* 是否在选中列表 */\n                if (this.isInCloseList(item)) {\n                    continue;\n                }\n                /* 是否已经包含在了openlist中 */\n                let itemIn = this.isInOpenList(item);\n                if (!itemIn) {\n                    item.parent = center;\n                    item.G = center.G + item.value_h;\n                    if (item.x != center.x && item.y != center.y) {\n                        item.G = center.G + item.value_v;\n                    }\n                    item.F = this.getF(item);\n                    this.openlist.push(item);\n\n                    /* 检查是否已经到终点 */\n                    let p1 = cc.v2(item.x, item.y);\n                    let p2 = cc.v2(this.distination.x, this.distination.y);\n                    if (p1.sub(p2).mag() < item.width) {\n                        isFined = true;\n                        this.closelist.push(item);\n                        console.log(\"finish\");\n                        let pathArr: pitem[] = [];\n                        /* 最终路径 */\n                        this.getPath(item, pathArr);\n                        break;\n                    }\n                }\n                else {\n                    item = itemIn;\n                    /* 比较G值，取最小的 */\n                    /* 基于当前center的G值 */\n                    let currentG = center.G + item.value_h;\n                    if (item.x != center.x && item.y != center.y) {\n                        currentG = center.G + item.value_v;\n                    }\n                    /* 如果基于当前center的G值更小，则以当前center为parent */\n                    if (currentG < item.G) {\n                        item.parent = center;\n                        item.G = currentG;\n                        item.F = this.getF(item);\n                    }\n                }\n\n            }\n        }\n    }\n\n    /**\n     * 获取最终路径\n     * @param item \n     * @param pathArr \n     */\n    getPath(item: pitem, pathArr: pitem[]) {\n        pathArr.push(item);\n        if (item.parent) {\n            this.getPath(item.parent, pathArr);\n        }\n    }\n\n    /**\n     * 是否在障碍物上\n     * @param item \n     */\n    isObstacle(item: pitem) {\n        let list: cc.Node[] = this.obstacle.children;\n        for (let i = 0; i < list.length; i++) {\n            if (item.x >= list[i].x && item.y >= list[i].y && item.x < list[i].x + list[i].width && item.y < list[i].y + list[i].height) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * 将当前center从openlist中移除\n     * @param center \n     */\n    removeCenter(center: pitem) {\n        for (let i = 0; i < this.openlist.length; i++) {\n            if (this.openlist[i].x == center.x && this.openlist[i].y == center.y) {\n                this.openlist.splice(i, 1);\n                break;\n            }\n        }\n    }\n\n    /**\n     * 计算F值\n     * @param item \n     */\n    getF(item: pitem): number {\n        let h: number = Math.abs(this.distination.x - item.x) * item.value_h;\n        let v: number = Math.abs(this.distination.y - item.y) * item.value_h;\n        let H = h + v;\n        let F = H + item.G;\n        return F;\n    }\n\n    /**\n     * 检查center周围的方格是否在openlist中\n     * @param item \n     */\n    isInOpenList(item: pitem): any {\n        let obj = this.openlist.find((o) => {\n            if (o.x == item.x && o.y == item.y) {\n                return o;\n            }\n        })\n        return obj ? obj : false;\n    }\n\n    /**\n     * 检查center周围的方格是否在closelist中\n     * @param item \n     */\n    isInCloseList(item: pitem) {\n        let obj = this.closelist.find((o) => {\n            if (o.x == item.x && o.y == item.y) {\n                return o;\n            }\n        })\n        return obj ? true : false;\n    }\n\n    /**\n     * 创建一个方格子\n     */\n    getPitem(): pitem {\n        let item: pitem = new pitem();\n        return item;\n    }\n}\n"]}